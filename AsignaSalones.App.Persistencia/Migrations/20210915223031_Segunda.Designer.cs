// <auto-generated />
using System;
using AsignaSalones.App.Persistencia;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AsignaSalones.App.Persistencia.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20210915223031_Segunda")]
    partial class Segunda
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("AsignaSalones.App.Dominio.Contagiado", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("fechaContagio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("periodoAislamiento")
                        .HasColumnType("datetime2");

                    b.Property<int?>("personaid")
                        .HasColumnType("int");

                    b.Property<string>("sintomas")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("personaid");

                    b.ToTable("Contagiados");
                });

            modelBuilder.Entity("AsignaSalones.App.Dominio.HorarioClase", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("SedeUniversidadid")
                        .HasColumnType("int");

                    b.Property<int>("cantPersonas")
                        .HasColumnType("int");

                    b.Property<DateTime>("hora")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("profesorid")
                        .HasColumnType("int");

                    b.Property<int?>("salonAsignadoid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("SedeUniversidadid");

                    b.HasIndex("profesorid");

                    b.HasIndex("salonAsignadoid");

                    b.ToTable("HorarioClase");
                });

            modelBuilder.Entity("AsignaSalones.App.Dominio.Persona", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("edad")
                        .HasColumnType("int");

                    b.Property<string>("estadoCovid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("identificacion")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Personas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Persona");
                });

            modelBuilder.Entity("AsignaSalones.App.Dominio.Salon", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("aforo")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Salones");
                });

            modelBuilder.Entity("AsignaSalones.App.Dominio.SedeUniversidad", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("numeroSalonesDispHora")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("SedesUniversidad");
                });

            modelBuilder.Entity("AsignaSalones.App.Dominio.Directivo", b =>
                {
                    b.HasBaseType("AsignaSalones.App.Dominio.Persona");

                    b.Property<string>("dependencia")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Directivo");
                });

            modelBuilder.Entity("AsignaSalones.App.Dominio.Estudiante", b =>
                {
                    b.HasBaseType("AsignaSalones.App.Dominio.Persona");

                    b.Property<int?>("HorarioClaseid")
                        .HasColumnType("int");

                    b.Property<string>("carrera")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("semestre")
                        .HasColumnType("int");

                    b.HasIndex("HorarioClaseid");

                    b.HasDiscriminator().HasValue("Estudiante");
                });

            modelBuilder.Entity("AsignaSalones.App.Dominio.PersonalAseo", b =>
                {
                    b.HasBaseType("AsignaSalones.App.Dominio.Persona");

                    b.Property<int>("turno")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("PersonalAseo");
                });

            modelBuilder.Entity("AsignaSalones.App.Dominio.Profesor", b =>
                {
                    b.HasBaseType("AsignaSalones.App.Dominio.Persona");

                    b.Property<string>("departamento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("materia")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Profesor");
                });

            modelBuilder.Entity("AsignaSalones.App.Dominio.Contagiado", b =>
                {
                    b.HasOne("AsignaSalones.App.Dominio.Persona", "persona")
                        .WithMany()
                        .HasForeignKey("personaid");

                    b.Navigation("persona");
                });

            modelBuilder.Entity("AsignaSalones.App.Dominio.HorarioClase", b =>
                {
                    b.HasOne("AsignaSalones.App.Dominio.SedeUniversidad", null)
                        .WithMany("materias")
                        .HasForeignKey("SedeUniversidadid");

                    b.HasOne("AsignaSalones.App.Dominio.Profesor", "profesor")
                        .WithMany()
                        .HasForeignKey("profesorid");

                    b.HasOne("AsignaSalones.App.Dominio.Salon", "salonAsignado")
                        .WithMany()
                        .HasForeignKey("salonAsignadoid");

                    b.Navigation("profesor");

                    b.Navigation("salonAsignado");
                });

            modelBuilder.Entity("AsignaSalones.App.Dominio.Estudiante", b =>
                {
                    b.HasOne("AsignaSalones.App.Dominio.HorarioClase", null)
                        .WithMany("estudiantes")
                        .HasForeignKey("HorarioClaseid");
                });

            modelBuilder.Entity("AsignaSalones.App.Dominio.HorarioClase", b =>
                {
                    b.Navigation("estudiantes");
                });

            modelBuilder.Entity("AsignaSalones.App.Dominio.SedeUniversidad", b =>
                {
                    b.Navigation("materias");
                });
#pragma warning restore 612, 618
        }
    }
}
